@model Funding.Data.Model.Campaign

@{
    ViewData["Title"] = "Create";
}



<h1>Create</h1>

<h4>Campaign</h4>
<hr />
<div class="row">
    <div class="col-md-4">
        <form asp-action="Create" enctype="multipart/form-data">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <div class="form-group">
                <label asp-for="Name" class="control-label">Campaign name</label>
                <input asp-for="Name" class="form-control" />
                <span asp-validation-for="Name" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="ShortDescription" class="control-label">Short description</label>
                <input asp-for="ShortDescription" class="form-control" />
                <span asp-validation-for="ShortDescription" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="LongDescription" class="control-label">Long description</label>
                <input asp-for="LongDescription" class="form-control" />
                <span asp-validation-for="LongDescription" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="ImgFile" class="control-label">Select the main campaign photo:</label>
                <input asp-for="ImgFile" type="file" accept="image/*"/>
                <span asp-validation-for="ImgFile" class="text-danger"></span>
            </div>
            <div class="form-group" id="drop-area">
                <div class="my-form">
                    <label asp-for="ImgFiles" class="control-label">Campaign images</label>
                    <p>Load images using the file selection dialog or by dragging and dropping the desired images into the selected area</p>
                    <input asp-for="ImgFiles" type="file" id="fileElem" multiple accept="image/*" onchange="handleFiles(this.files)">
                    <span asp-validation-for="Img" class="text-danger"></span>
                    <label class="button" for="fileElem">Select images</label>
                </div>
                <progress id="progress-bar" max=100 value=0></progress>
                <div id="gallery"></div>
            </div>
            <div class="form-group">
                <input asp-for="User.Id" type="hidden" value="@UserManager.GetUserId(User)" />
                <input type="submit" value="Create" class="btn btn-primary" />
            </div>
        </form>
    </div>
</div>

<div>
    <a asp-action="Index">Back to List</a>
</div>

<script>
    let dropArea = document.getElementById('drop-area')
    let filesDone = 0
    let filesToDo = 0
    let progressBar = document.getElementById('progress-bar')
    let uploadProgress = []

        ;['dragenter', 'dragover', 'dragleave', 'drop'].forEach(eventName => {
            dropArea.addEventListener(eventName, preventDefaults, false)
        })

    function preventDefaults(e) {
        e.preventDefault()
        e.stopPropagation()
    }

    ;['dragenter', 'dragover'].forEach(eventName => {
        dropArea.addEventListener(eventName, highlight, false)
    })

        ;['dragleave', 'drop'].forEach(eventName => {
            dropArea.addEventListener(eventName, unhighlight, false)
        })

    function highlight(e) {
        dropArea.classList.add('highlight')
    }

    function unhighlight(e) {
        dropArea.classList.remove('highlight')
    }

    dropArea.addEventListener('drop', handleDrop, false)
    function handleDrop(e) {
        let dt = e.dataTransfer
        let files = dt.files
        console.log(dt)
        console.log(files)
        handleFiles(files)
        document.getElementById("fileElem").files = files
    }

    function handleFiles(files) {
        files = [...files]
        initializeProgress(files.length)
        files.forEach(uploadFile)
        files.forEach(previewFile)
    }

    function uploadFile(file, i) {
        var url = 'UploadImage'
        var xhr = new XMLHttpRequest()
        var formData = new FormData()
        xhr.open('POST', url, true)

        // Добавили следующие слушатели
        xhr.upload.addEventListener("progress", function (e) {
            updateProgress(i, (e.loaded * 100.0 / e.total) || 100)
        })

        xhr.addEventListener('readystatechange', function (e) {
            if (xhr.readyState == 4 && xhr.status == 200) {
                // Готово. Сообщаем пользователю
            }
            else if (xhr.readyState == 4 && xhr.status != 200) {
                // Ошибка. Сообщаем пользователю
            }
        })

        formData.append('file', file)
        xhr.send(formData)
    }

    function previewFile(file) {
        let reader = new FileReader()
        reader.readAsDataURL(file)
        reader.onloadend = function () {
            let img = document.createElement('img')
            img.src = reader.result
            document.getElementById('gallery').appendChild(img)
        }
    }

    function initializeProgress(numFiles) {
        progressBar.value = 0
        uploadProgress = []

        for (let i = numFiles; i > 0; i--) {
            uploadProgress.push(0)
        }
    }

    function updateProgress(fileNumber, percent) {
        uploadProgress[fileNumber] = percent
        let total = uploadProgress.reduce((tot, curr) => tot + curr, 0) / uploadProgress.length
        progressBar.value = total
    }

    function progressDone() {
        filesDone++
        progressBar.value = filesDone / filesToDo * 100
    }
</script>
@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}
